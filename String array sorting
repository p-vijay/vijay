#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int lexicographic_sort(const char* a, const char* b) {
    return strcmp(a,b)>0;  // a is small else b is small

}
int character_count(const char* a)
{
int x[128]={0};
int i,c=0;
for(i=0;a[i]!='\0';i++)
{
x[a[i]]=1;
}
for(i=0;i<128;i++) 
 c=c+x[i];
return c;
}
int lexicographic_sort_reverse(const char* a, const char* b) {
           return strcmp(a,b)<0;
}

int sort_by_number_of_distinct_characters(const char* a, const char* b) {
    int dis=character_count(a)-character_count(b);
 return  dis?dis:lexicographic_sort(a,b);
}

int sort_by_length(const char* a, const char* b) {
    int l=strlen(a)-strlen(b);
return  l?l:lexicographic_sort(a,b);
}

void string_sort(char** arr,const int len,int (*cmp_func)(const char* a, const char* b)){
    int i,j;
              // char temp[50];  //dummy string
    for(i=0;i<len-1;i++)
    {
        for(j=0;j<len-i-1;j++)
        {
            if(cmp_func(arr[j],arr[j+1])>0)//  arr[j]--->bigger j+1---smmaler
            {
               const char *temp = arr[j]; //*temp
                arr[j]=arr[j+1];
                arr[j+1]=temp;
            }
        }
    }

}


int main() 
{
    int n;
    scanf("%d", &n);
  
    char** arr;
	arr = (char**)malloc(n * sizeof(char*));
  
    for(int i = 0; i < n; i++){
        *(arr + i) = malloc(1024 * sizeof(char));
        scanf("%s", *(arr + i));
        *(arr + i) = realloc(*(arr + i), strlen(*(arr + i)) + 1);
    }
  
    string_sort(arr, n, lexicographic_sort);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);
    printf("\n");

    string_sort(arr, n, lexicographic_sort_reverse);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");

    string_sort(arr, n, sort_by_length);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);    
    printf("\n");

    string_sort(arr, n, sort_by_number_of_distinct_characters);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");
}
